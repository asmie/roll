#include <limits.h>
#include <vector>
#include "gtest/gtest.h"

#include "blake.h"

TEST(blake512, get_hash_size)
{
	BLAKE512 hash;
	
	ASSERT_EQ(64, hash.get_hash_size());
}

TEST(blake512, hash_null)
{
	BLAKE512 hash;

	hash.hash(nullptr, nullptr, 92);		// Should not crash
}

TEST(blake512, hash)
{
	BLAKE512 hash;

	uint8_t test_vector[92];
	uint8_t hash_result[64];
	const uint8_t hash_pattern[64] = { 0xfc, 0x1e, 0x8c, 0xe7, 0x62, 0x70, 0x05, 0x24, 0x46, 0x74, 0xff, 0xcf, 0xdc, 0x66, 0x08, 
		0x8e, 0x11, 0x62, 0x13, 0x48, 0x84, 0x3e, 0x3b, 0xa2, 0x7e, 0xcb, 0x49, 0x51, 0x4e, 0x2c, 0x55, 0xd1, 0x25, 0x8e, 0x93, 
		0xa5, 0x25, 0x5a, 0x0b, 0xd2, 0x4d, 0x15, 0x36, 0x4b, 0xb3, 0x69, 0xc6, 0xe9, 0x2f, 0x95, 0xdc, 0xe2, 0x8d, 0x44,
		0x89, 0x97, 0x6f, 0x46, 0xca, 0x2e, 0xc5, 0xb9, 0x7e, 0xcb};

	for (unsigned int i = 0; i < 92; i++)
		test_vector[i] = i;

	hash.hash(hash_result, test_vector, 92);
	
	for (int i = 0; i < 64; i++)
		ASSERT_EQ(hash_result[i], hash_pattern[i]);
}